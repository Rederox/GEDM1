{% extends 'base.html.twig' %}

{% block title %}Hello HomeController!
{% endblock %}

{% block body %}

	<style>

		.blue-square-background {
			background: #AEB8FE;
			width: 80%;
			height: 50%;
			position: absolute;
			top: 0;
			right: 0;
			border-radius: 0 0 0 60px;
			z-index: -2;
		}
		.violet-square-background {
			background: #758BFD;
			width: 25%;
			height: 45%;
			position: absolute;
			top: 0;
			right: 0;
			border-radius: 0 0 0 60px;
			z-index: -1;
		}

		.home-content {
			position: absolute;
			top: 90px;
			left: 25%;
		}

		.title {
			font-size: 2rem;
			font-weight: bold;
			margin-bottom: 50px;

		}

		.home-grid {
			display: flex;
			flex-wrap: wrap;
			justify-content: space-around;
			align-items: stretch;
			padding: 20px;
		}

		.home-item {
			text-align: center;
			padding: 20px;
			margin: 10px;
			flex: 1 0 200px; /* flex-grow, flex-shrink, flex-basis */
			box-sizing: border-box;
		}

		.file-card {
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
		}

		.file-card:hover {
			cursor: pointer;
		}

		.file-card h2 {
			font-size: 1rem;
			font-weight: bold;
			margin-bottom: 20px;
		}

		.file-card_image {
			display: flex;
			justify-content: center;
			align-items: center;
			border-radius: 40px;
		}

		.file-card_image img {
			max-width: 200px;
			height: auto;
			border-radius: 40px;
		}

		.bell {
			position: fixed;
			top: 20px;
			right: 30px;
			width: 40px;
			height: 40px;
            z-index: 100;
		}

		.dropdown-toggle::after {
			display: none;
		}

		.dropdown-menu {
			width: 300px;
			height: 300px;
			overflow-y: auto;
            overflow-x: hidden;
		}
		.closeButton {
			position: absolute;
			top: -10px;
			right: 0;
			cursor: pointer;
		}
		.closeButton:hover {
			color: #758BFD;
		}

		/* Responsive styling using media query */
		@media(max-width: 768px) {
			.file-card {
				max-width: 100%; /* Make the card take up the full width on smaller screens */
			}
		}

		/* Set max-width for the image to make it responsive */
		@media(max-width: 480px) {
			.file-card_image img {
				max-width: 100%; /* Make the image take up the full width of its container */
				height: auto; /* Maintain the aspect ratio */
			}
		}
	</style>

	<div class="d-flex col w-100">
		<div>
			{% include 'home/components/sideBarHome.html.twig' %}
		</div>
		<div class="bell dropdown">
			<button type="button" class="btn btn-orange position-relative dropdown-toggle" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
				<i class="bi bi-bell text-white"></i>
				<span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" id='messageLength'>
					{{ notifications|length }}
				</span>
			</button>

            <div class="dropdown-menu p-2" aria-labelledby="dropdownMenuButton">
                <h6 class="text-center mb-3">Notifications</h6>
                {% if notifications|length == 0 %}
                    <p class="text-center">Vous n'avez pas de notifications</p>
                {% else %}

                    {% for notification in notifications %}
                        <div class="bg-lightGray rounded p-2 mb-2 position-relative notification-item" data-notification-id="{{ notification.getId() }}">
                            <div class="closeButton">
                                <i class="bi bi-x text-drakBlue fs-3"></i>
                            </div>
                            <p class="mb-1 text-drakBlue text-wrap">{{ notification.getMessage() }}</p>
                            <div class="d-flex justify-content-between">
                                <span class="font-weight-bold">
                                    Produit: Titre
                                </span>
                                <small class="text-muted">
                                    {{ notification.getSendedAt()|date('d/m/Y H:i') }}
                                </small>
                            </div>
                        </div>
                    {% endfor %}
                {% endif %}
            </div>

		</div>


		<div class="col home-content position relative">
			<h1 class="title">Mes fiches</h1>
			<div class="home-grid">
				{% for file in files %}
					<div class="home-item">
						<div class="file-card" data-url="{{ file.getProductId().getFile() }}">
							<h2>{{ file.getProductId().getProductName() }}</h2>
							<div class="file-card_image">
								<img src="{{ file.getProductId().getImageUrl() }}" alt="{{ file.getProductId().getProductName() }}">
							</div>
						</div>
					</div>
				{% endfor %}
			</div>
		</div>
		<div class="blue-square-background"></div>
		<div class="violet-square-background"></div>
	</div>

	<script>

		// download file from url given in parameter and save it in the downloads folder of the user
function downloadFile(url) {
var link = document.createElement('a');
link.href = url;
link.download = url.substr(url.lastIndexOf('/') + 1);
link.click();
}
// use downloadFile function on click on the download file-card element
document.querySelectorAll('.file-card').forEach(item => {
item.addEventListener('click', event => {
var imageUrl = item.getAttribute('data-url');
downloadFile(imageUrl);
})
});

    document.addEventListener('DOMContentLoaded', function() {
    var closeButtons = document.querySelectorAll('.closeButton');

    closeButtons.forEach(function(button) {
        button.addEventListener('click', function(event) {
            var notificationDiv = this.closest('.notification-item');
            var notificationId = notificationDiv.getAttribute('data-notification-id');
            event.stopPropagation();
            fetch('/api/notification/delete', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ notificationId: notificationId }) // Modification ici
            })
            .then(response => response.json())
            .then(data => {
                notificationDiv.remove();
                var messageLength = document.getElementById('messageLength');
                messageLength.innerHTML = messageLength.innerHTML - 1;
            })
            .catch((error) => {
                // GÃ©rer les erreurs
                console.error('Error:', error);
            });
        });
    });
});
	</script>


{% endblock %}
